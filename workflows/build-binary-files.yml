name: Build binary files

on:
  workflow_call:
    inputs:
      package-version:
        required: True
        type: string
      binary-files:
        required: True
        type: string

jobs:
  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          tags: nuitka-builder
          outputs: type=docker,dest=nuitka-builder.tar

      - name: Upload docker image
        uses: actions/upload-artifact@v3
        with:
          name: nuitka-builder
          path: nuitka-builder.tar

  build-binary-file:
    name: Build ${{ matrix.binary-file }} binary file
    runs-on: ubuntu-latest

    needs:
      - build-docker-image

    strategy:
      matrix:
        binary-file: ${{ fromJson(inputs.binary-files) }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Download docker image
        uses: actions/download-artifact@v3
        with:
          name: nuitka-builder

      - name: Load docker image
        run: |
          docker load --input nuitka-builder.tar
          docker image ls -a

      - name: Build binary files
        run: |
          docker run --rm --privileged \
            -e BUILDER_UID="$(id -u)" -e BUILDER_GID="$(id -g)" \
            -v "${GITHUB_WORKSPACE}:/build" \
            nuitka-builder /build/scripts/entry.sh ${{ matrix.binary-file }}
          chmod +x ${{ matrix.binary-file }}.dist/${{ matrix.binary-file }}

      - name: Compress binary files
        run: |
          tar czvf \
            ${{ matrix.binary-file }}-${{ inputs.package-version }}-arm64.tar.gz \
            ${{ matrix.binary-file }}

      - name: Upload compressed binary file
        uses: actions/upload-artifact@v3
        with:
          name: binary-files
          path: ${{ matrix.binary-file }}-${{ inputs.package-version }}-arm64.tar.gz
