name: Build

on:
  workflow_call:

jobs:
  config:
    name: Read config
    uses: ./.github/workflows/config.yml

  prepare_build:
    name: Prepare build
    uses: ./.github/workflows/prepare-build.yml

  build_docker_image:
    name: Build docker image
    needs:
      - config
      - prepare_build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          tags: nuitka-builder
          outputs: type=docker,dest=/tmp/nuitka-builder.tar
      - name: Upload docker image
        uses: actions/upload-artifact@v3
        with:
          name: nuitka-builder
          path: /tmp/nuitka-builder.tar

  build_binary_file:
    name: Build ${{ matrix.console_scripts }} binary file
    needs:
      - config
      - prepare_build
      - build_docker_image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        console_scripts: ${{ fromJson(needs.config.outputs.config).console_scripts }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Download docker image
        uses: actions/download-artifact@v3
        with:
          name: nuitka-builder
          path: /tmp
      - name: Load docker image
        run: |
          docker load --input /tmp/nuitka-builder.tar
          docker image ls -a
      - name: Build binary files
        run: |
          docker run --rm --privileged \
            -e BUILDER_UID="$(id -u)" -e BUILDER_GID="$(id -g)" \
            -v "${GITHUB_WORKSPACE}:/build" \
            nuitka-builder /build/scripts/entry.sh ${{ matrix.console_scripts }}
          chmod +x ${{ matrix.console_scripts }}.dist/${{ matrix.console_scripts }}
      - name: Compress binary files
        run: |
          tar -C ${{ matrix.console_scripts }}.dist -czvf \
            ${{ needs.prepare_build.outputs.package_version }}-arm64.tar.gz \
            ${{ matrix.console_scripts }}
          mkdir -pv output
          mv -v ${{ needs.prepare_build.outputs.package_version }}-arm64.tar.gz \
            output/${{ needs.prepare_build.outputs.package_version }}-arm64.tar.gz
      - name: Upload compressed binary file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.console_scripts }}-${{ needs.prepare_build.outputs.package_version }}-arm64.tar.gz
          path: ${{ github.workspace }}/output/${{ matrix.console_scripts }}-${{ needs.prepare_build.outputs.package_version }}-arm64.tar.gz  # yamllint disable-line rule:line-length
