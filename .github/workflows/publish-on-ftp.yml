name: Publish on FTP

on:
  workflow_call:
    inputs:
      ftp-hostname:
        required: True
        type: string
      ftp-port:
        required: True
        type: string
      ftp-username:
        required: True
        type: string
      ftp-publish-path:
        required: True
        type: string
      version-dev:
        type: string
        default: 'false'
        
    secrets:
      FTP_PASSWORD:
        required: True

jobs:
  publish-on-pypi:
    name: Publish on FTP
    runs-on: ubuntu-latest
    steps:
      - name: Download files
        uses: actions/download-artifact@v3
        with:
          path: .

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y curlftpfs

      - name: Set repository suffix
        run: |
          echo "${{ inputs.version-dev }}"
          if [ "${{ inputs.version-dev }}" != "true" ]; then
            echo "repo-suffix=testing" >> $GITHUB_ENV
          else
            echo "repo-suffix=main" >> $GITHUB_ENV
          fi

      - name: Mount FTP
        run: |
          sudo mkdir -pv "/mnt/${{ inputs.ftp-hostname }}"
          sudo curlftpfs \
            -v \
            -o "ssl,no_verify_peer,user=${{ inputs.ftp-username }}:${{ secrets.FTP_PASSWORD }},allow_other,rw,gid=$(id -g),uid=$(id -u)" \
            ftp://${{ inputs.ftp-hostname }}:${{ inputs.ftp-port }} /mnt/${{ inputs.ftp-hostname }}

      - name: Transfer package to FTP server
        run: |       
          mkdir -pv "/mnt/${{ inputs.ftp-hostname }}/${{ inputs.ftp-publish-path }}/${{ env.repo-suffix }}"
          cp -pv opkg-package/* "/mnt/${{ inputs.ftp-hostname }}/${{ inputs.ftp-publish-path }}/${{ env.repo-suffix }}"

      - name: Create package index
        run: |
          packages="/mnt/${{ inputs.ftp-hostname }}/${{ inputs.ftp-publish-path }}/${{ env.repo-suffix }}"
          tmp="${GITHUB_WORKSPACE}/tmp"

          mkdir -pv "${tmp}"
          cp -v "${packages}/"*.ipk "${tmp}"

          for pkg in "${tmp}/"*.ipk; do \
            sudo tar xzfv "${pkg}" -C "${tmp}"; \
            for control in "${tmp}/control.tar.gz"; do \
              tar xzfv "${control}" -C "${tmp}"; \
              echo -e "Size: $(stat -c %s ${pkg})" >> "${tmp}/control"; \
              echo -e "SHA256sum: $(sha256sum ${pkg} | grep -o "^[^ ]*")" >> "${tmp}/control"; \
              echo -e "Filename: $(basename ${pkg})" >> "${tmp}/control"; \
              echo -e "SourceDateEpoch: $(date +%s)\n" >> "${tmp}/control"; \
              cat "${tmp}/control" >> "${tmp}/Packages"; \
            done; \
          done

          gzip -vk "${tmp}/Packages"
          mv -v "${tmp}/Packages"* ${packages}
