name: Unit testing

on:
  workflow_call:
    inputs:
      python-versions:
        required: True
        type: string

jobs:
  unit-testing:
    name: Unit tests using Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: False
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache virtualenv for Python ${{ matrix.python-version }}
        uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Cache pip download for Python ${{ matrix.python-version }}
        uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Install requirements
        run: |
          pip install \
            -r requirements.txt \
            -r requirements-dev.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Run unit tests
        run: |
          pytest \
            --cov=src \
            --cov-report=term-missing \
            --junitxml=junit/test-results.xml \
            --cov-report=xml

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-python-${{ matrix.python-version }}
          path: .coverage

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-python-${{ matrix.python-version }}
          path: junit/test-results.xml
          if-no-files-found: error
