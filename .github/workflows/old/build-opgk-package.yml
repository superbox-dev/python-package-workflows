name: Build

on:
  workflow_call:

jobs:
  config:
    name: Read config
    uses: ./.github/workflows/config.yml

  prepare_build:
    name: Prepare build
    uses: ./.github/workflows/prepare-build.yml

  build_opkg_package:
    name: Build OPKG package
    needs:
      - config
      - prepare_build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ needs.config.outputs.latest_python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.config.outputs.latest_python }}
      - name: Download output files
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/output
      - name: Install opkg-utils
        run: |
            wget https://git.yoctoproject.org/opkg-utils/snapshot/opkg-utils-0.4.5.tar.gz
            tar xzfv opkg-utils-0.4.5.tar.gz
            make -C opkg-utils-0.4.5 PREFIX=${GITHUB_WORKSPACE} install-utils
      - name: Build OPKG package
        run: |
          mkdir -pv output/ipk/{CONTROL,usr/local/bin}

          (
            echo "Package: ${{ needs.prepare_build.outputs.package_name }}"
            echo "Version: ${{ needs.prepare_build.outputs.package_version }}"
            echo "Architecture: aarch64"
            echo "Maintainer: $(python setup.py --author)"
            echo "Source: $(python setup.py --url)"
            echo "Description: $(python setup.py --description)"
            echo "License: $(python setup.py --license)"
          ) > output/ipk/CONTROL/control

          ls -la output

          for f in $(echo "${{ needs.config.outputs.config }}" | jq -c ".console_scripts" | jq -cr ".[]"); do
            tar xzfv -C output "output/${f}-${{ needs.prepare_build.outputs.package_version }}-arm64.tar.gz"
            ls -la output
            cp -v "output/${f}" output/ipk/usr/local/bin
          done

          sudo chown -R root:root output/ipk
          ${GITHUB_WORKSPACE}/bin/opkg-build -c output/ipk ${GITHUB_WORKSPACE}/output
      - name: Upload IPK package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.prepare_build.outputs.package_name }}_${{ needs.prepare_build.outputs.package_version }}_aarch64.ipk
          path: ${{ github.workspace }}/output/${{ needs.prepare_build.outputs.package_name }}_${{ needs.prepare_build.outputs.package_version }}_aarch64.ipk  # yamllint disable-line rule:line-length
